@import url('https://fonts.googleapis.com/css2?family=Martel+Sans:wght@600&display=swap');

*{
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
}

.body{
    background-color: black;
}

.main{
    background-image: url(assets/bg.jpg);
    background-size: max(1200px,100vw) ;
    background-position: centre centre;
    background-repeat: no-repeat;
    /* Bcakground-Position takes x-axis and y-axis value  */
    height: 110vh;
    width: 100vw ;
}

/* Creating a dummy box to add opacity of the image */
.main .box{
    height: 110vh;
    width: 100vw;
    opacity: 0.66;
    position: absolute;
    top: 0;
    background-color: black;
}

nav{
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: auto;
    max-width: 76vw; 
    height: 15vh;
}

nav img{
    color: red;
    height: 6.5vh;
    position: relative;
    z-index: 10;
}

nav button{
    position: relative;
    z-index: 10;
}

.hero{
    font-family: "Martel Sans", sans-serif;
    font-weight: 600;
    font-size: 45px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: white;
    position: relative;
    bottom: 50px;
    gap: 23px;
}

/* When ever you are using psuedo class for a class itself as a parent, then give a space like below */
/* if i don't give greater than > symbol, then the styles will applied to all the first childs in HERO */
.hero> :nth-child(1) {
    font-family: 'Poppins', sans-serif;
    font-weight: bolder;
    font-size: 43px;
    text-align: center;

}

.hero> :nth-child(2) {
    font-weight: 400;
    font-size: 24px;
    text-align: center;
    line-height: 30px;
    
}

.hero> :nth-child(3) {
    font-weight: 400;
    font-size: 20px;
    text-align: center;
    
}
.separation{
    height: 10px;
    background-color: rgb(34, 33, 33);
    position: relative;
    bottom: 100px;
}

.btn{
    height:5.5vh;
    width: 6vw;
    font-size: 15px;
    border-radius: 5px;
    font-weight: bold;
}

.btn-red-sn{
    margin-left: 25px;
    background-color: red;
    color: white;
    border: none;
    transition-property: background;
    transition-duration: 0.5s;
    transition-timing-function: ease;
}

.btn-red-sn:active{
    background-color: rgb(141, 31, 31);
    color: rgb(235, 226, 226);
}

.btn-red-sn:hover{
    background-color: rgb(179, 24, 13);
    cursor: pointer;
}

.btn-red{
    margin-left: 0;
    height: 8vh;
    width: 15vw;
    font-size: 25px;
    background-color: red;
    color: white;
    font-family: Arial, Helvetica, sans-serif;
    font-weight: 500;
    border: none;
}

i{
    transform: rotate(90deg);
}


.input-text{
    position: relative;
    bottom: 2px;
    height: 7.7vh;
    width: 30vw;
    border:1px rgba(231, 229, 229, 0.7) solid;
    background-color:rgba(31, 30, 30, 0.7);
    padding-left: 40px;
    /* Give left padding to take the placeholder text go right as they are the content inside the input box */
}

.input-text::placeholder{
    font-size: 20px;
    font-weight: 500;
    color: rgb(167, 164, 164);
}

.language{
    height: 5.5vh;
    width: 10vw;
    border: 1px solid rgba(231, 229, 229, 0.7);
    background-color: black;
    opacity: 0.7;
    color: white;
    font-size: 17px;
    font-weight: 400;
    border-radius: 5px;
    position: relative;
    top: 2px;
}

.sort-down{
    position: relative;
    font-size: 15px;
    bottom: 3px;
    left: 5px;
    transform: rotate(720deg);
}

.fa-language{
    font-size: 20px;
    position: relative;
    top: 1.5px;
    right: 8px;
    transform: rotate(720deg);
}

.all-outer{
    height: 600px;
    width: 100vw;
    background-color: black;
}

.tv-inner{
    height: 600px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.tv-text{
    position: relative;
    bottom: 10px;
    color: white;
    transform: scale(1.2);
}

.tv-text-upper{
    font-size: 25px;
    font-weight: 600;
    margin-bottom: 20px;
}

pre{
    font-size: 20px;
    line-height: 29px;
    height: 70px;
    width: 400px;
    white-space: wrap;
    color: rgba(243, 236, 236, 1);
}

.tv-img{
    transform: scale(0.85);
    position: relative;
    left: 55px;
    z-index: 3;
}

.tv-video{
    position: absolute;
    top: 883px;
    right: 212px;
    z-index: 2;
}

.tv-separation{
    height: 10px;
    width: 100vw;
    background-color: rgb(34, 33, 33);
}

.mobile-inner{
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    top: 20px;
}

.mobile-text{
    position: relative;
    top: 60px;
}
.mobile-text-upper{
    height: 180px;
    width: 550px;
    font-size: 48px;
    color: white;
    font-weight: bold;
    line-height: 60px;
}

.mobile-text-below{
    position: relative;
    bottom: 30px;
    width: 550px;
    font-size: 29px;
    line-height: 35px;
}

.downloading{
    display: flex;
    justify-content: space-between;
    height: 127px;
    width: 344px;
    border: 2px solid rgba(128, 128, 128, 0.7);
    position: absolute;
    /* position absoulte means CURRENT FLOW se remove ho jayega, means this div(downlaoding) doesn't come under
    mobile-inner, but it works with respect to (all-outer/mobile-outer) div, do top=0px and u'll understand */
    top: 343px;
    left: 235px;
    border-radius: 10px;
    background-color: rgb(0, 0, 0);;
}

.stranger-things{
    position: relative;
    top: 15px;
    left: 20px;
    border-radius: 10px;
}

.downloading-text{
    color: white;
    position: relative;
    top: 42px;
    left: 20px;
    font-size: 20px
}

.downloading-gif{
    position: relative;
    top: 15px;
}

.downloading-text-lower{
    color: #0071eb;;
}

.apple-screen-inner{
    height: 600px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.apple-text{
    color: white;
}

.apple-text-upper{
    font-size: 50px;
    font-weight: 600;
    margin-bottom: 20px;
}

.apple-text-lower{
    color: rgba(231, 229, 229, 1);
    font-size: 29px;
    width: 520px;
    line-height: 35px;
}

.apple-screen{
       z-index: 5;
}

.apple-video{
    position: absolute;
    top: 2030px;
    right: 210px;
    z-index: 4;
}

.children-inner{
    height: 600px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.children-text{
    color: white;
}

.children-text-upper{
    width: 500px;
    font-size: 50px;
    font-weight: 600;
    margin-bottom: 20px;
}

.children-text-lower{
    color: rgba(231, 229, 229, 1);
    font-size: 29px;
    width: 580px;
    line-height: 35px;
}

/* .questions-outer{
    height: 2000px;
    background-color: black;
}

.questions-inner{
    height: 1900px;
    position: relative;
    top: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    
}

.questions-inner h2{
    color: white;
    font-size: 50px;
    font-weight: 600;
    margin-bottom: 20px;
}

summary{
    list-style-type: none;
    padding: 29px 0px 4px 33px;
}

.questions{
    height: 15vh;
    width: 85vw;
    margin-bottom: 40px;
    background-color: rgb(45, 45, 45);
}

details{
    color: white;
    font-size: 34px;
    height: 15vh;
    width: 85vw;
}

details:hover{
    background-color: rgb(82, 81, 81);
    cursor: pointer;
}


DESIGINING AN ACCORDIAN

.details{
    transition: all;
    transition-duration: none;
    transition-timing-function: ease-in-out;
}
summary > span > i{
    font-size: 35px;
    position: relative;
    left: 500px;
}

.details:active{
    height: 70vh;
    background-color: rgb(45, 45, 45);
    margin-bottom: 20px;
}

.summary-text{
    position: relative;
    top: 35px;
    left: 10px;
}

.summary-text p{
    font-size: 30px;
    transform: scale(0.9);
    line-height: 40px;
}

.extreme-1{
    position: relative;
    right: 4px;
}

.extreme-2{
    position: relative;
    right: 9px;
}
.extreme{
    position: relative;
    right: 6.5px;
}

.extreme-3{
    position: relative;
    right: 7px;
} */

.accordian-outer{
    height: 1000px;
    width: 100vw;
    background-color: black;
}
.accordian{
    max-width: 700px;
    /* box-shadow: 0 0 10px rgba(0,0,0,0.2); */
    /* border-radius: 5px; */
    overflow: hidden;
    font-family: "Quicksand", sans-serif;
    /* background: #009578; */
    transform: scale(1.5);
}

.accordian-label, .accordian-content{
    padding: 14px 20px; 
    /* top and bottom 14px/ left and right 20px*/
}

.accordian-label{
    display: block;
    color: #ffffff;
    font-weight: 500;
    cursor: pointer;
    position: relative;
    transition: background 0.2s;
}

.accordian-label:hover{
    background-color: rgb(82, 81, 81);
    cursor: pointer;
}

.accordian-label::after{
    content: "";
    position: absolute;
    /* now this is a child of .accordian-label after doing position:absolute */
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    width: 12px;
    height: 6px;
    background-image: url('data:image/svg+xml;utf8,<svg width="100" height="50" xmlns="http://www.w3.org/2000/svg"><polygon points="0,0 100,0 50,50" style="fill:%23FFFFFF99;" /></svg>');
    background-size: contain;
    transition: transform 0.4s;
}

.accordian-content{
    background-color: #ffff88;
    line-height: 1.6;
    font-size: 0.85em;
    display: none;
}

.accordian-input{
    display: none;
    transition: all;
    transition-duration: 2s;
    transition-timing-function: ease-in-out;
}

.accordian > div{
    box-shadow: 0 0 10px rgba(0,0,0,0.2);
    background-color: rgb(45, 45, 45);
    margin-bottom: 10px;
}

.accordian-input:checked ~ .accordian-content{
    display: block;
}

.accordian-input:checked ~ .accordian-label::after{
    transform: translateY(-50%) rotate(0.5turn);
}

.accordian-outer > h2{
    height: auto;
    width: 700px;
    color: white;
    font-size: 45px;
    font-weight: 600;
    position: relative;
    top: 40px;
    left: 350px;
}

.accordian{
    position: relative;
    top: 200px;
    left: 300px;
}

/* .hero-again{
   position: relative;
   left: 350px;
   top: 370px;

   NEVER do this, just do and see what happens, you will get an extra white screen in the right of 
   your website
} */

.hero-again{
    position: absolute;
    left: 320px;
    top: 3960px;
 }
 

.hero-again p{
    color: white;
    font-size: 25px;
    margin-bottom: 20px;
    transform: scale(0.85);
    position: relative;
    right: 170px;
}

.hero-again-btn{
    margin-left: 10px;
}

.footer-outer{
    height: 400px;
    background-color: black;
}

footer{
    max-width: 80vw;
    margin: auto;
    background-color: black;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    position: relative;
    top: 110px;
    left: 50px;
}

.footer-item{
    display: flex;
    flex-direction: column;
}

.footer-item a{
    font-size: 15px;
    line-height: 35px;
    color: rgba(231, 229, 229, 0.7);
    text-decoration: none;
}

/* IN GRID, MAYBE BY-DEFAULT THE CURSOR IS SET TO POINTER, EVEN THOUGH I DIDN'T SET IT TO BE LIKE THAT 
   WHEN HOVERED */

.footer-item a:hover{
    text-decoration: underline;
}

.call{
    color: rgba(231, 229, 229, 0.7);
    position: relative;
    top: 90px;
    left: 177px;
}

.call span{
    text-decoration: underline;
}

.footer-language{
    position: relative;
    top: 130px;
    left: 175px;
}

.india{
    color: rgba(231, 229, 229, 0.7);
    font-size: 15px;
    position: relative;
    top: 180px;
    left: 37px;
}